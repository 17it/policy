"use strict";


module.exports = function(thunk, payload) {

  var tasks = [];

  var tasker = function *(){
    var response = yield thunk(subset);

    endJob.resolve(response);
    return Promise.resolve(response);
  };
  
  var endJob, next;

  var workerChain = [], jobTasks = [];

  var pickworker = function * (task) {
    
    if(jobTasks.length > payload) //no available worker, waiting
      yield next;

    jobTasks.push(task);


    if(!endJob) {
      next = new Promise(function(resolve, reject){
        next.resolve = resolve;
      });

      endJob = new Promise(function(resolve, reject){
        endJob.resolve = resolve;
      });
      var response = yield tasker();
      endJob = null;

      next.resolve();

      return Promise.resolve(response);
    }


    return endJob;
  }

  return out;
}


worker = cargo(function *(tasks){
  data = yield fetch("Stuff.json", tasks);
  return Promise.resolve(data);
}, 100);


each([1,2,3?4,5], function(id){
  yield worker(id);
});